🎯Problem Explaination:
In the Relative Ranks problem on LeetCode, you're given an integer array representing scores of athletes. You need to return their relative ranks, represented as a string, according to the scores. The relative ranks are as follows:

The athlete with the highest score gets the "Gold Medal".
The athlete with the second-highest score gets the "Silver Medal".
The athlete with the third-highest score gets the "Bronze Medal".
The remaining athletes get their rank represented by their position in the ordered list (starting from 4th place).
📥Input:
An integer array nums containing scores of athletes.
📤Output:
A string array representing the relative ranks of the athletes according to their scores.
🔍 Methods To Solve This Problem:
I'll be covering three different methods to solve this problem:

Sorting and Mapping
Priority Queue
Array as Map
1️⃣Sorting and Mapping🤓:
🧠Intuition:
The problem requires assigning ranks to athletes based on their scores, where the highest score gets the "Gold Medal," the second-highest gets the "Silver Medal," the third-highest gets the "Bronze Medal," and the rest get their placement numbers as their ranks. To achieve this, we can sort the scores in descending order and assign ranks accordingly.

📚Detailed Approach:
Sorting the scores: First, we sort the scores in descending order. This allows us to easily determine the rank of each athlete based on their position in the sorted list.

Assigning medals: We create a list medals containing the strings "Gold Medal," "Silver Medal," and "Bronze Medal" to assign these ranks to the top three athletes.

Rank Mapping: We create a dictionary rank_mapping where the keys are the scores and the values are the corresponding ranks based on their positions in the sorted list. For the top three scores, we use the medals list, and for the rest, we use their placement number (index + 1).

Constructing the answer array: Finally, we iterate through the original score list and use the rank_mapping dictionary to get the rank for each athlete. We construct the answer list containing the ranks for all athletes.

Return: We return the answer list containing the ranks of all athletes.